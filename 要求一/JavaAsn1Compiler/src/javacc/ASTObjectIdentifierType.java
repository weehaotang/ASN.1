package javacc;
/* Generated By:JJTree: Do not edit this line. ASTObjectIdentifierType.java */

import java.io.*;

public class ASTObjectIdentifierType extends SimpleNode {
  public ASTObjectIdentifierType(int id) {
    super(id);
  }

  public ASTObjectIdentifierType(AsnParser p, int id) {
    super(p, id);
  }

	public void
	generateClass(String name)
	{
		try
		{
			InputStream is = getClass().getResourceAsStream("objectid.template");	// modifed by Fatih Batuk
			String templateName = "objectid.template";		// added by Fatih Batuk
			String filename = null;
			if(AsnParser.outputDirectory != null)
				filename = new String(AsnParser.outputDirectory + System.getProperty("file.separator") + name + ".java");
			else
				filename = new String(name + ".java");

			OutputStream os = new FileOutputStream(filename);
			BufferedReader reader = new BufferedReader(new FileReader(templateName)); 	// modifed by Fatih Batuk
			String line;
			while(true)
			{
				line = reader.readLine();
				if(line == null)
					break;

				while(true)
				{
					int idx = line.indexOf('@');
					if(idx == -1)
						break;

					int ndx = line.indexOf('@', idx + 1);	// look for the closing symbol
					if(ndx == -1)
						break;

					String directive = line.substring(idx + 1, ndx);
					if(directive.equals("name"))	// replace with the class name
					{
						String left = line.substring(0, idx);
						String right = line.substring(ndx + 1);
						line = new String(left + name + right);
						continue;
					}

					if(directive.equals("package"))	// insert a list of declarations
					{
						if(AsnParser.outputPackage != null)
							line = new String("package " + AsnParser.outputPackage + ";");
						else
							line = "";

						continue;
					}
				}

				os.write(line.getBytes());
				os.write(0x0a);
			}

			os.flush();
			os.close();
			reader.close();
		}
		catch(IOException e)
		{
			e.printStackTrace();
		}
	}

  /** Accept the visitor. **/
  public Object jjtAccept(AsnParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
}
